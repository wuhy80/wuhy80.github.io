import{_ as s}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as n,c as a,e as t,a as e,f as p}from"./app.d49fe713.js";const o={},c=e("p",null,"\u65E5\u5E38\u8BB0\u5F55",-1),l=p(`<h1 id="_2022-09-23" tabindex="-1"><a class="header-anchor" href="#_2022-09-23" aria-hidden="true">#</a> 2022-09-23</h1><p>\u5F00\u59CB\u7814\u7A76 Workflow\uFF0C\u8FD9\u662F\u4E00\u4E2A C++\u5199\u7684\u7F51\u7EDC\u5E93\uFF0C\u5305\u542B\u4E86\u4E00\u5B9A\u7684\u591A\u4EFB\u52A1\u5904\u7406,\u4E0D\u8FC7\u4EC5\u4EC5\u662F\u57FA\u4E8E C++11 \u6807\u51C6\u7684\uFF0C\u5728\u4E00\u4E9B\u5730\u65B9\u8FD8\u662F\u6CA1\u6709\u5229\u7528\u597D C++\u7684\u65B0\u7248\u672C\u7684\u7279\u6027\uFF0C\u5C24\u5176\u662F\u5E76\u53D1\u5904\u7406\u65B9\u9762\uFF0C\u8FD8\u6709\u90E8\u5206\u4F7F\u7528 C \u7684\u7EBF\u7A0B\u5E93 \u53E6\u5916\u5C31\u662F\u8FD8\u6CA1\u6709\u5168\u90E8\u4F7F\u7528\u667A\u80FD\u6307\u9488\uFF0C\u5728\u90E8\u5206\u5730\u65B9\u8FD8\u662F\u4F7F\u7528\u539F\u751F\u6307\u9488</p><p>\u8FD9\u91CC\u9762\u6709\u4E00\u4E2A\u5199\u6CD5\u662F\u5F88\u6709\u610F\u601D\u7684\uFF0CWFThreadTask\uFF0C\u8FD9\u91CC\u9762\u662F\u6709 INPUT \u548C OUTPUT \u4E24\u4E2A\u7C7B\u578B,\u5728 15 \u884C\u7684\u65F6\u5019\uFF0C\u5C31\u53EF\u4EE5\u76F4\u63A5\u5B9A\u4E49\u4E00\u4E2A Task\uFF0C\u628A Input \u548C Output \u7ED9\u6307\u5B9A\u4E86\uFF0C\u91CC\u9762\u652F\u6301\u7684\u51FD\u6570\u53EA\u8981\u5B58\u5728\u5C31\u53EF\u4EE5\u76F4\u63A5\u8C03\u7528\uFF0C\u7C7B\u4F3C\u4E8E duck type \u7684\u6982\u5FF5\u4E86\u3002\u53EA\u662F\u8C03\u8BD5\u8D77\u6765\u4F1A\u6709\u4E00\u4E9B\u7684\u9EBB\u70E6</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">template</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token class-name">INPUT</span><span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">OUTPUT</span><span class="token operator">&gt;</span>
<span class="token keyword">class</span> <span class="token class-name">WFThreadTask</span> <span class="token operator">:</span> <span class="token base-clause"><span class="token keyword">public</span> <span class="token class-name">ExecRequest</span></span>
<span class="token punctuation">{</span>
<span class="token keyword">public</span><span class="token operator">:</span>
	INPUT <span class="token operator">*</span><span class="token function">get_input</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token operator">&amp;</span><span class="token keyword">this</span><span class="token operator">-&gt;</span>input<span class="token punctuation">;</span> <span class="token punctuation">}</span>
	OUTPUT <span class="token operator">*</span><span class="token function">get_output</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token operator">&amp;</span><span class="token keyword">this</span><span class="token operator">-&gt;</span>output<span class="token punctuation">;</span> <span class="token punctuation">}</span>

<span class="token keyword">protected</span><span class="token operator">:</span>
	INPUT input<span class="token punctuation">;</span>
	OUTPUT output<span class="token punctuation">;</span>
	std<span class="token double-colon punctuation">::</span>function<span class="token operator">&lt;</span><span class="token keyword">void</span> <span class="token punctuation">(</span>WFThreadTask<span class="token operator">&lt;</span>INPUT<span class="token punctuation">,</span> OUTPUT<span class="token operator">&gt;</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> callback<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>


<span class="token keyword">using</span> ThreadDnsTask <span class="token operator">=</span> WFThreadTask<span class="token operator">&lt;</span>DnsInput<span class="token punctuation">,</span> DnsOutput<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function r(i,u){return n(),a("div",null,[c,t(" more "),l])}const v=s(o,[["render",r],["__file","20220923_note.html.vue"]]);export{v as default};
