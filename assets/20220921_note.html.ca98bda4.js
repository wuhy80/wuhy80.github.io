import{_ as r}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as k,c as d,e as m,b as c,w as a,a as n,f as u,d as s,r as i}from"./app.df480adc.js";const v="/2022/09/smart_pointer_compare_20220921220927.png",b="/2022/09/smart_pointer_new_compare_20220921223148.png",_="/2022/09/new_smart_pointer_20220921223626.png",h="/2022/09/20220921_comparisonEng.png",g={},w=n("p",null,"\u667A\u80FD\u6307\u9488\u6027\u80FD\u5BF9\u6BD4",-1),y=u(`<h1 id="_2022-09-21-\u667A\u80FD\u6307\u9488\u6027\u80FD\u5BF9\u6BD4" tabindex="-1"><a class="header-anchor" href="#_2022-09-21-\u667A\u80FD\u6307\u9488\u6027\u80FD\u5BF9\u6BD4" aria-hidden="true">#</a> 2022-09-21 \u667A\u80FD\u6307\u9488\u6027\u80FD\u5BF9\u6BD4</h1><p>Demo \u7ED3\u6784\u4F53\u5B9A\u4E49\u5982\u4E0B</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">struct</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> val<span class="token punctuation">;</span>

    <span class="token function">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">val</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),f=n("div",{class:"language-cpp ext-cpp line-numbers-mode"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token keyword"},"for"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"1000"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    Demo `),n("span",{class:"token operator"},"*"),s("demo "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token function"},"Demo"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"delete"),s(" demo"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),x=n("div",{class:"language-cpp ext-cpp line-numbers-mode"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token keyword"},"for"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"1000"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),s("unique_ptr"),n("span",{class:"token operator"},"<"),s("Demo"),n("span",{class:"token operator"},">"),s(" dm1 "),n("span",{class:"token operator"},"="),s(" std"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"make_unique"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),s("Demo"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),D=n("div",{class:"language-cpp ext-cpp line-numbers-mode"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token keyword"},"for"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"1000"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),s("shared_ptr"),n("span",{class:"token operator"},"<"),s("Demo"),n("span",{class:"token operator"},">"),s(" dm2 "),n("span",{class:"token operator"},"="),s(" std"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"make_shared"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),s("Demo"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),q=n("h2",{id:"\u6027\u80FD\u5BF9\u6BD4\u7ED3\u679C",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6027\u80FD\u5BF9\u6BD4\u7ED3\u679C","aria-hidden":"true"},"#"),s(" \u6027\u80FD\u5BF9\u6BD4\u7ED3\u679C")],-1),A=n("p",null,"\u5BF9\u6BD4\u7ED3\u679C\u6709\u4E9B\u51FA\u4E4E\u610F\u6599\uFF0C\u667A\u80FD\u6307\u9488\u7684\u6027\u80FD\u5BF9\u6BD4\u539F\u751F\u6307\u9488\u5DEE\u4E86\u5F88\u591A\u3002",-1),C=n("p",null,[n("img",{src:v,alt:"SmarpPointer",loading:"lazy"})],-1),N=s("\u5C06\u7F16\u8BD1\u7684\u4EE3\u7801\u653E\u5230 "),V={href:"https://godbolt.org/",target:"_blank",rel:"noopener noreferrer"},z=s("https://godbolt.org/"),B=s(" \u3002\u53EF\u4EE5\u770B\u5230\u5728\u4F18\u5316\u5F00\u5173\u6253\u5F00\u4E4B\u540E\u4EE3\u7801\u76F4\u63A5\u7ED9\u4F18\u5316\u6CA1\u4E86"),E=n("p",null,[n("img",{src:b,alt:"GodBolt",loading:"lazy"})],-1),I=n("p",null,"\u867D\u7136\u4E0D\u786E\u5B9A\u540C\u6837\u7684\u4EE3\u7801\u5728 build-bench \u6027\u80FD\u5BF9\u6BD4\u5E73\u53F0\u662F\u5426\u4E5F\u6709\u5982\u6B64\u7684\u4F18\u5316\u529B\u5EA6\uFF0C\u4F46\u4EC5\u4EC5\u4ECE\u76EE\u524D\u4F18\u5316\u7ED3\u679C\u770B\uFF0C\u5982\u679C\u6CA1\u6709\u4E00\u4E9B\u7684\u8F93\u5165\u8F93\u51FA\u5904\u7406\uFF0C\u8BC4\u4F30\u7684\u6027\u80FD\u5E76\u4E0D\u51C6\u786E\u3002",-1),S=n("h2",{id:"\u6DFB\u52A0\u8F93\u5165\u8F93\u51FA\u4E4B\u540E\u7684\u6027\u80FD\u5BF9\u6BD4",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6DFB\u52A0\u8F93\u5165\u8F93\u51FA\u4E4B\u540E\u7684\u6027\u80FD\u5BF9\u6BD4","aria-hidden":"true"},"#"),s(" \u6DFB\u52A0\u8F93\u5165\u8F93\u51FA\u4E4B\u540E\u7684\u6027\u80FD\u5BF9\u6BD4")],-1),T=n("div",{class:"language-cpp ext-cpp line-numbers-mode"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},"<iostream>")]),s(`

`),n("span",{class:"token keyword"},"int"),s(" tot "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"Demo"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"int"),s(" val"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token function"},"Demo"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"val"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"test"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s("tot"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},";"),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"for"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"1000"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        Demo `),n("span",{class:"token operator"},"*"),s("demo "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token function"},"Demo"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        demo`),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"test"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"delete"),s(" demo"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    std`),n("span",{class:"token double-colon punctuation"},"::"),s("cout "),n("span",{class:"token operator"},"<<"),s(" tot "),n("span",{class:"token operator"},"<<"),s(" std"),n("span",{class:"token double-colon punctuation"},"::"),s("endl"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),L=n("div",{class:"language-cpp ext-cpp line-numbers-mode"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},"<memory>")]),s(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},"<iostream>")]),s(`

`),n("span",{class:"token keyword"},"int"),s(" tot "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"Demo"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"int"),s(" val"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token function"},"Demo"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"val"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"test"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s("tot"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},";"),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"for"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"1000"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),s("unique_ptr"),n("span",{class:"token operator"},"<"),s("Demo"),n("span",{class:"token operator"},">"),s(" dm1 "),n("span",{class:"token operator"},"="),s(" std"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"make_unique"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),s("Demo"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    dm1`),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"test"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    std`),n("span",{class:"token double-colon punctuation"},"::"),s("cout "),n("span",{class:"token operator"},"<<"),s(" tot "),n("span",{class:"token operator"},"<<"),s(" std"),n("span",{class:"token double-colon punctuation"},"::"),s("endl"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),G=n("div",{class:"language-cpp ext-cpp line-numbers-mode"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},"<memory>")]),s(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},"<iostream>")]),s(`

`),n("span",{class:"token keyword"},"int"),s(" tot "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"Demo"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"int"),s(" val"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token function"},"Demo"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"val"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"test"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s("tot"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},";"),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"for"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"1000"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    std`),n("span",{class:"token double-colon punctuation"},"::"),s("shared_ptr"),n("span",{class:"token operator"},"<"),s("Demo"),n("span",{class:"token operator"},">"),s(" dm2 "),n("span",{class:"token operator"},"="),s(" std"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"make_shared"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),s("Demo"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    dm2`),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"test"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    std`),n("span",{class:"token double-colon punctuation"},"::"),s("cout "),n("span",{class:"token operator"},"<<"),s(" tot "),n("span",{class:"token operator"},"<<"),s(" std"),n("span",{class:"token double-colon punctuation"},"::"),s("endl"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),P=n("p",null,"\u65B0\u65B9\u6848\u4E0B\u9762\uFF0C\u6267\u884C\u7684\u7ED3\u679C\u5982\u4E0B\uFF0C\u53EF\u4EE5\u770B\u5230\u65B0\u7684\u5BF9\u6BD4\u65B9\u6848\u91CC\u9762\u5DEE\u5F02\u5E76\u4E0D\u5927\u3002\u8BF4\u660E\u4F7F\u7528\u667A\u80FD\u6307\u9488\u7684\u4EE3\u4EF7\u662F\u6BD4\u8F83\u5C0F\u7684\u3002",-1),R=n("p",null,[n("img",{src:_,alt:"New Solution",loading:"lazy"})],-1),j=n("h2",{id:"\u5176\u4ED6\u53C2\u8003",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5176\u4ED6\u53C2\u8003","aria-hidden":"true"},"#"),s(" \u5176\u4ED6\u53C2\u8003")],-1),F=n("p",null,"\u6587\u7AE0\u94FE\u63A5\uFF0C \u4ECE\u8FD9\u91CC\u9762\u5BF9\u6BD4\u770B\u5230\u7684\u7ED3\u679C\u770B\uFF0C\u5728\u6253\u5F00\u4E86\u4F18\u5316\u5F00\u5173\u4E4B\u540E\uFF0C\u6027\u80FD\u5DEE\u5F02\u975E\u5E38\u5C0F",-1),H={href:"https://www.modernescpp.com/index.php/memory-and-performance-overhead-of-smart-pointer",target:"_blank",rel:"noopener noreferrer"},J=s("https://www.modernescpp.com/index.php/memory-and-performance-overhead-of-smart-pointer"),K=u(`<div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;chrono&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">long</span> <span class="token keyword">long</span> numInt<span class="token operator">=</span> <span class="token number">100000000</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

  <span class="token keyword">auto</span> start <span class="token operator">=</span> std<span class="token double-colon punctuation">::</span>chrono<span class="token double-colon punctuation">::</span>system_clock<span class="token double-colon punctuation">::</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token keyword">long</span> <span class="token keyword">long</span> i<span class="token operator">=</span><span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> numInt<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">int</span><span class="token operator">*</span> <span class="token function">tmp</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">delete</span> tmp<span class="token punctuation">;</span>
    <span class="token comment">// std::shared_ptr&lt;int&gt; tmp(new int(i));</span>
    <span class="token comment">// std::shared_ptr&lt;int&gt; tmp(std::make_shared&lt;int&gt;(i));</span>
    <span class="token comment">// std::unique_ptr&lt;int&gt; tmp(new int(i));</span>
    <span class="token comment">// std::unique_ptr&lt;int&gt; tmp(std::make_unique&lt;int&gt;(i));</span>
  <span class="token punctuation">}</span>

  std<span class="token double-colon punctuation">::</span>chrono<span class="token double-colon punctuation">::</span>duration<span class="token operator">&lt;</span><span class="token keyword">double</span><span class="token operator">&gt;</span> dur<span class="token operator">=</span> std<span class="token double-colon punctuation">::</span>chrono<span class="token double-colon punctuation">::</span>system_clock<span class="token double-colon punctuation">::</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">;</span>
  std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;time native: &quot;</span> <span class="token operator">&lt;&lt;</span> dur<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; seconds&quot;</span> <span class="token operator">&lt;&lt;</span> std<span class="token double-colon punctuation">::</span>endl<span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+h+'" alt="Compare Result" loading="lazy"></p>',2);function M(O,Q){const p=i("CodeTabs"),l=i("ExternalLinkIcon");return k(),d("div",null,[w,m(" more "),y,c(p,{data:[{title:"raw_pointer"},{title:"unique_pointer"},{title:"shared_pointer"}],"tab-id":"cpp"},{tab0:a(({title:t,value:e,isActive:o})=>[f]),tab1:a(({title:t,value:e,isActive:o})=>[x]),tab2:a(({title:t,value:e,isActive:o})=>[D]),_:1}),q,A,C,n("p",null,[N,n("a",V,[z,c(l)]),B]),E,I,S,c(p,{data:[{title:"raw_pointer"},{title:"unique_pointer"},{title:"shared_pointer"}],"tab-id":"cpp"},{tab0:a(({title:t,value:e,isActive:o})=>[T]),tab1:a(({title:t,value:e,isActive:o})=>[L]),tab2:a(({title:t,value:e,isActive:o})=>[G]),_:1}),P,R,j,F,n("p",null,[n("a",H,[J,c(l)])]),K])}const X=r(g,[["render",M],["__file","20220921_note.html.vue"]]);export{X as default};
