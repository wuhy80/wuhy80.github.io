import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,e as p,a as t,f as e}from"./app.d1fd7a55.js";const o={},c=t("p",null,"\u5251\u6307 Offer 35. \u590D\u6742\u94FE\u8868\u7684\u590D\u5236",-1),l=e(`<h1 id="_2022-10-06-leetcode" tabindex="-1"><a class="header-anchor" href="#_2022-10-06-leetcode" aria-hidden="true">#</a> 2022-10-06 LeetCode</h1><h2 id="\u5251\u6307-offer-35-\u590D\u6742\u94FE\u8868\u7684\u590D\u5236" tabindex="-1"><a class="header-anchor" href="#\u5251\u6307-offer-35-\u590D\u6742\u94FE\u8868\u7684\u590D\u5236" aria-hidden="true">#</a> \u5251\u6307 Offer 35. \u590D\u6742\u94FE\u8868\u7684\u590D\u5236</h2><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
<span class="token keyword">public</span><span class="token operator">:</span>
  Node <span class="token operator">*</span><span class="token function">copyRandomList</span><span class="token punctuation">(</span>Node <span class="token operator">*</span>head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    map<span class="token operator">&lt;</span>Node <span class="token operator">*</span><span class="token punctuation">,</span> Node <span class="token operator">*</span><span class="token operator">&gt;</span> orig_map<span class="token punctuation">;</span>
    Node <span class="token operator">*</span>p <span class="token operator">=</span> head<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>p <span class="token operator">!=</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>orig_map<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">==</span> orig_map<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        orig_map<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">Node</span><span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      p <span class="token operator">=</span> p<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    p <span class="token operator">=</span> head<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>p <span class="token operator">!=</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>next <span class="token operator">!=</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        orig_map<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token operator">-&gt;</span>next <span class="token operator">=</span> orig_map<span class="token punctuation">[</span>p<span class="token operator">-&gt;</span>next<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token operator">-&gt;</span>random <span class="token operator">!=</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        orig_map<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token operator">-&gt;</span>random <span class="token operator">=</span> orig_map<span class="token punctuation">[</span>p<span class="token operator">-&gt;</span>random<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      p <span class="token operator">=</span> p<span class="token operator">-&gt;</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> orig_map<span class="token punctuation">[</span>head<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5251\u6307-offer-58-\u5DE6\u65CB\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u5251\u6307-offer-58-\u5DE6\u65CB\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u5251\u6307 Offer 58. \u5DE6\u65CB\u5B57\u7B26\u4E32</h2><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
<span class="token keyword">public</span><span class="token operator">:</span>
    string <span class="token function">reverseLeftWords</span><span class="token punctuation">(</span>string s<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> n <span class="token operator">%</span> s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> s<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span> <span class="token operator">+</span> s<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function i(u,r){return s(),a("div",null,[c,p(" more "),l])}const v=n(o,[["render",i],["__file","20221006.html.vue"]]);export{v as default};
