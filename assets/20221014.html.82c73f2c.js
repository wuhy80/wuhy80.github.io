import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,e,a as p,f as t}from"./app.748f2ef8.js";const o={},l=p("p",null,"\u5173\u4E8EC++\u5BF9\u8C61\u5E03\u5C40\u7684\u4E00\u4E9B\u77E5\u8BC6",-1),c=t(`<h1 id="_2022-10-14-c-\u5BF9\u8C61\u5E03\u5C40" tabindex="-1"><a class="header-anchor" href="#_2022-10-14-c-\u5BF9\u8C61\u5E03\u5C40" aria-hidden="true">#</a> 2022-10-14 C++\u5BF9\u8C61\u5E03\u5C40</h1><h2 id="\u666E\u901A\u7C7B\u5E03\u5C40\u67E5\u770B" tabindex="-1"><a class="header-anchor" href="#\u666E\u901A\u7C7B\u5E03\u5C40\u67E5\u770B" aria-hidden="true">#</a> \u666E\u901A\u7C7B\u5E03\u5C40\u67E5\u770B</h2><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">struct</span> <span class="token class-name">Base</span> <span class="token punctuation">{</span>
  <span class="token function">Base</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">default</span><span class="token punctuation">;</span>
  <span class="token operator">~</span><span class="token function">Base</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">default</span><span class="token punctuation">;</span>

  <span class="token keyword">void</span> <span class="token function">Func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">int</span> a<span class="token punctuation">;</span>
  <span class="token keyword">int</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  Base b<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u547D\u4EE4<code>clang -Xclang -fdump-record-layouts --stdlib=libc++ -c model.cpp</code>\u8FDB\u884C\u7F16\u8BD1\uFF0C\u7F16\u8BD1\u7ED3\u679C\u5982\u4E0B</p><p>\u53EF\u4EE5\u770B\u5230a, b\u5206\u522B\u5360\u636E4\u5B57\u8282\uFF0CFunc\u51FD\u6570\u6CA1\u6709\u5360\u7528</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>
*** Dumping AST Record Layout
         <span class="token number">0</span> <span class="token operator">|</span> struct Base
         <span class="token number">0</span> <span class="token operator">|</span>   int a
         <span class="token number">4</span> <span class="token operator">|</span>   int b
           <span class="token operator">|</span> <span class="token punctuation">[</span>sizeof<span class="token operator">=</span><span class="token number">8</span>, <span class="token assign-left variable">dsize</span><span class="token operator">=</span><span class="token number">8</span>, <span class="token assign-left variable">align</span><span class="token operator">=</span><span class="token number">4</span>,
           <span class="token operator">|</span>  <span class="token assign-left variable">nvsize</span><span class="token operator">=</span><span class="token number">8</span>, <span class="token assign-left variable">nvalign</span><span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">]</span>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x921790 <span class="token operator">&lt;</span>model.cpp:1:1, line:9:<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span> line:1:8 referenced struct Base definition
<span class="token operator">|</span>-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable trivial literal has_user_declared_ctor
<span class="token operator">|</span> <span class="token operator">|</span>-DefaultConstructor exists trivial
<span class="token operator">|</span> <span class="token operator">|</span>-CopyConstructor simple trivial has_const_param implicit_has_const_param
<span class="token operator">|</span> <span class="token operator">|</span>-MoveConstructor
<span class="token operator">|</span> <span class="token operator">|</span>-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
<span class="token operator">|</span> <span class="token operator">|</span>-MoveAssignment
<span class="token operator">|</span> <span class="token variable"><span class="token variable">\`</span><span class="token parameter variable">-Destructor</span> irrelevant trivial user_declared
<span class="token operator">|</span>-CXXRecordDecl 0x9218a8 <span class="token operator">&lt;</span>col:1, col:<span class="token operator"><span class="token file-descriptor important">8</span>&gt;</span> col:8 implicit referenced struct Base
<span class="token operator">|</span>-CXXConstructorDecl 0x9219c8 <span class="token operator">&lt;</span>line:2:3, col:1<span class="token operator"><span class="token file-descriptor important">8</span>&gt;</span> col:3 used Base <span class="token string">&#39;void () noexcept&#39;</span> default trivial
<span class="token operator">|</span> <span class="token variable">\`</span></span><span class="token parameter variable">-CompoundStmt</span> 0x922128 <span class="token operator">&lt;</span>col:1<span class="token operator"><span class="token file-descriptor important">8</span>&gt;</span>
<span class="token operator">|</span>-CXXDestructorDecl 0x921ab8 <span class="token operator">&lt;</span>line:3:3, col:1<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> col:3 ~Base <span class="token string">&#39;void ()&#39;</span> default trivial noexcept-unevaluated 0x921ab8
<span class="token operator">|</span>-CXXMethodDecl 0x921bc0 <span class="token operator">&lt;</span>line:5:3, col:1<span class="token operator"><span class="token file-descriptor important">3</span>&gt;</span> col:8 Func <span class="token string">&#39;void ()&#39;</span>
<span class="token operator">|</span>-FieldDecl 0x921c78 <span class="token operator">&lt;</span>line:7:3, col:<span class="token operator"><span class="token file-descriptor important">7</span>&gt;</span> col:7 a <span class="token string">&#39;int&#39;</span>
<span class="token operator">|</span>-FieldDecl 0x921ce0 <span class="token operator">&lt;</span>line:8:3, col:<span class="token operator"><span class="token file-descriptor important">7</span>&gt;</span> col:7 b <span class="token string">&#39;int&#39;</span>
<span class="token variable"><span class="token variable">\`</span><span class="token parameter variable">-CXXConstructorDecl</span> 0x921f68 <span class="token operator">&lt;</span>line:1:<span class="token operator"><span class="token file-descriptor important">8</span>&gt;</span> col:8 implicit constexpr Base <span class="token string">&#39;void (const Base &amp;)&#39;</span> inline default trivial noexcept-unevaluated 0x921f68
  <span class="token variable">\`</span></span><span class="token parameter variable">-ParmVarDecl</span> 0x922078 <span class="token operator">&lt;</span>col:<span class="token operator"><span class="token file-descriptor important">8</span>&gt;</span> col:8 <span class="token string">&#39;const Base &amp;&#39;</span>

Layout: <span class="token operator">&lt;</span>CGRecordLayout
  LLVMType:%struct.Base <span class="token operator">=</span> <span class="token builtin class-name">type</span> <span class="token punctuation">{</span> i32, i32 <span class="token punctuation">}</span>
  NonVirtualBaseLLVMType:%struct.Base <span class="token operator">=</span> <span class="token builtin class-name">type</span> <span class="token punctuation">{</span> i32, i32 <span class="token punctuation">}</span>
  IsZeroInitializable:1
  BitFields:<span class="token punctuation">[</span>
<span class="token punctuation">]</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6DFB\u52A0\u865A\u51FD\u6570\u4E4B\u540E" tabindex="-1"><a class="header-anchor" href="#\u6DFB\u52A0\u865A\u51FD\u6570\u4E4B\u540E" aria-hidden="true">#</a> \u6DFB\u52A0\u865A\u51FD\u6570\u4E4B\u540E</h2><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">struct</span> <span class="token class-name">Base</span> <span class="token punctuation">{</span>
  <span class="token function">Base</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">default</span><span class="token punctuation">;</span>
  <span class="token keyword">virtual</span> <span class="token operator">~</span><span class="token function">Base</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">default</span><span class="token punctuation">;</span>

  <span class="token keyword">void</span> <span class="token function">Func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">virtual</span> <span class="token keyword">void</span> <span class="token function">FuncB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">int</span> a<span class="token punctuation">;</span>
  <span class="token keyword">int</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  Base b<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>clang -Xclang -fdump-record-layouts --stdlib=libc++ -c model.cpp</code>\u7F16\u8BD1\u4E4B\u540E\u7ED3\u679C\u5982\u4E0B\uFF0C\u53EF\u4EE5\u770B\u5230\u5728\u6700\u5F00\u59CB\u6DFB\u52A0\u4E868\u5B57\u8282\u7684\u865A\u51FD\u6570\u6307\u9488\u4FE1\u606F</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>*** Dumping AST Record Layout
         <span class="token number">0</span> <span class="token operator">|</span> struct Base
         <span class="token number">0</span> <span class="token operator">|</span>   <span class="token punctuation">(</span>Base vtable pointer<span class="token punctuation">)</span>
         <span class="token number">8</span> <span class="token operator">|</span>   int a
        <span class="token number">12</span> <span class="token operator">|</span>   int b
           <span class="token operator">|</span> <span class="token punctuation">[</span>sizeof<span class="token operator">=</span><span class="token number">16</span>, <span class="token assign-left variable">dsize</span><span class="token operator">=</span><span class="token number">16</span>, <span class="token assign-left variable">align</span><span class="token operator">=</span><span class="token number">8</span>,
           <span class="token operator">|</span>  <span class="token assign-left variable">nvsize</span><span class="token operator">=</span><span class="token number">16</span>, <span class="token assign-left variable">nvalign</span><span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u67E5\u770B\u865A\u51FD\u6570\u8868<code>clang -Xclang -fdump-vtable-layouts --stdlib=libc++ -c model.cpp</code></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Vtable <span class="token keyword">for</span> <span class="token string">&#39;Base&#39;</span> <span class="token punctuation">(</span><span class="token number">5</span> entries<span class="token punctuation">)</span>.
   <span class="token number">0</span> <span class="token operator">|</span> offset_to_top <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
   <span class="token number">1</span> <span class="token operator">|</span> Base RTTI
       -- <span class="token punctuation">(</span>Base, <span class="token number">0</span><span class="token punctuation">)</span> vtable address --
   <span class="token number">2</span> <span class="token operator">|</span> Base::~Base<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>complete<span class="token punctuation">]</span>
   <span class="token number">3</span> <span class="token operator">|</span> Base::~Base<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>deleting<span class="token punctuation">]</span>
   <span class="token number">4</span> <span class="token operator">|</span> void Base::FuncB<span class="token punctuation">(</span><span class="token punctuation">)</span>

VTable indices <span class="token keyword">for</span> <span class="token string">&#39;Base&#39;</span> <span class="token punctuation">(</span><span class="token number">3</span> entries<span class="token punctuation">)</span>.
   <span class="token number">0</span> <span class="token operator">|</span> Base::~Base<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>complete<span class="token punctuation">]</span>
   <span class="token number">1</span> <span class="token operator">|</span> Base::~Base<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>deleting<span class="token punctuation">]</span>
   <span class="token number">2</span> <span class="token operator">|</span> void Base::FuncB<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12);function i(r,u){return s(),a("div",null,[l,e(" more "),c])}const v=n(o,[["render",i],["__file","20221014.html.vue"]]);export{v as default};
